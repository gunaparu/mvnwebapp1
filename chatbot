import csv
from collections import defaultdict

def create_role_list(file_path):
    # Initialize a dictionary to store roles for each account
    account_roles = defaultdict(list)

    # Open and read the CSV file
    with open(file_path, mode='r') as file:
        csv_reader = csv.DictReader(file)
        
        # Process each row
        for row in csv_reader:
            account = row['Account']
            role = row['Role']
            account_roles[account].append(role)
    
    # Convert defaultdict to regular dictionary for output
    return dict(account_roles)

# Usage
file_path = 'accounts_roles.csv'  # Replace with the path to your CSV file
account_roles = create_role_list(file_path)

# Display the result
for account, roles in account_roles.items():
    print(f"Account: {account}, Roles: {roles}")

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "AllowAccessAdministrators",
      "Effect": "Allow",
      "Principal": {
        "AWS": "arn:aws:iam::700231760013:role/BUAdministratorAccessRole"
      },
      "Action": "kms:*",
      "Resource": "*"
    },
    {
      "Sid": "EnableIAMUserPermissions",
      "Effect": "Allow",
      "Principal": {
        "AWS": [
          "arn:aws:iam::549690299348:role/BUAdministratorAccessRole"
        ]
      },
      "Action": [
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*",
        "kms:DescribeKey"
      ],
      "Resource": "*"
    },
    {
      "Sid": "AllowRootAccountAccess",
      "Effect": "Allow",
      "Principal": {
        "AWS": "arn:aws:iam::ACCOUNT_ID:root" 
      },
      "Action": "kms:*",
      "Resource": "*"
    }
  ]
}
