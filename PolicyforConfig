{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "config:StartRemediationExecution",
        "config:GetComplianceDetailsByConfigRule",
        "config:PutRemediationConfigurations"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:ModifyInstanceAttribute", // Modify this based on the specific remediation action
        // Add other permissions for necessary remediation actions
      ],
      "Resource": "*"
    }
  ]
}



import boto3

def get_s3_bucket_kms_encryption_status():
    # Initialize Boto3 S3 client
    s3 = boto3.client('s3')

    # Get list of S3 buckets
    buckets = s3.list_buckets()

    # Iterate through each bucket and get encryption status
    for bucket in buckets['Buckets']:
        bucket_name = bucket['Name']
        try:
            # Get bucket encryption configuration
            encryption = s3.get_bucket_encryption(Bucket=bucket_name)
            print(f"Bucket: {bucket_name} - KMS Encryption: Enabled")
        except s3.exceptions.ClientError as e:
            if e.response['Error']['Code'] == 'ServerSideEncryptionConfigurationNotFoundError':
                print(f"Bucket: {bucket_name} - KMS Encryption: Not Enabled")
            else:
                print(f"Bucket: {bucket_name} - Error: {e}")

if __name__ == "__main__":
    get_s3_bucket_kms_encryption_status()









As part of our IAM roles rationalization, we found the “AWS-Admin” role across all accounts with no usage. Moreover, it has administrator access and no usage. We are currently analyzing the reason behind the creation of this role across all accounts. If this role is no longer needed, we can delete it. Please advise us on this.

