Cyera DSPM PoC Steps for AWS Account (Past Tense)

1. Setup Cyera Account:

	•	Signed up for Cyera: A Cyera account was registered via their website or access to a demo or trial was requested.
	•	Obtained PoC license: Reached out to Cyera to obtain a PoC license or trial environment.

2. Integrated AWS Account with Cyera:

	•	Created a Read-Only IAM Role for Cyera:
	•	Navigated to the AWS Management Console and created a new IAM role for cross-account access, using Cyera’s AWS account ID and external ID provided by Cyera.
	•	Attached the required policies, including:
	•	SecurityAudit (AWS-managed policy)
	•	AmazonS3ReadOnlyAccess
	•	Other service-specific policies for data store scanning.
	•	Saved the Role ARN for integration.
	•	Connected AWS account:
	•	In Cyera, navigated to the Cloud Integrations section and selected AWS.
	•	Entered the Role ARN from the IAM role and enabled scanning for data stores like S3, RDS, DynamoDB, and any other relevant services.

3. Configured Initial Data Scan:

	•	Started the initial data discovery scan:
	•	Initiated Cyera’s discovery scan across the AWS environment, ensuring key data sources were included, such as:
	•	S3 buckets
	•	RDS instances
	•	DynamoDB tables
	•	EBS volumes
	•	Enabled Cyera to identify sensitive data types like PII, PCI, PHI, and other critical data categories.
	•	Scanned unstructured and structured data:
	•	Verified that Cyera scanned both structured (e.g., RDS, DynamoDB) and unstructured (e.g., S3, EBS) data for sensitive information.

4. Monitored Discovery and Classification of Sensitive Data:

	•	Reviewed discovered data:
	•	After the scan was completed, accessed the Cyera dashboard to review the results.
	•	Validated the accuracy of Cyera’s data classification for sensitive categories, such as PII, financial data (PCI), and health information (PHI).
	•	Reviewed tagging and metadata:
	•	Checked how Cyera tagged sensitive data and assessed whether it provided sufficient metadata (e.g., location, data type, sensitivity).

5. Analyzed Risk Assessment and Prioritization:

	•	Examined risk overview:
	•	Explored Cyera’s risk assessment to understand which data was at risk based on exposure, access controls, or encryption.
	•	Reviewed risk prioritization based on:
	•	Publicly accessible data (S3 buckets, etc.)
	•	Misconfigured permissions
	•	Unencrypted sensitive data
	•	Assessed cross-account and excessive access risks:
	•	Confirmed whether Cyera identified excessive access across different accounts, users, or roles that could compromise sensitive data.

6. Tested Remediation Features:

	•	Reviewed remediation suggestions:
	•	Explored Cyera’s recommended remediations for identified risks, such as adjusting access controls, enabling encryption, or modifying policies.
	•	Tested whether Cyera offered suggestions for correcting misconfigurations (e.g., closing public S3 access).
	•	Created custom workflows:
	•	Where applicable, set up custom workflows to automate remediation and integrated with tools like Jira for issue tracking.

7. Evaluated Policy Enforcement and Compliance Features:

	•	Set up custom policies:
	•	Tested Cyera’s ability to enforce data governance policies, such as restricting certain data types from being stored in publicly accessible storage.
	•	Created policies based on compliance requirements (e.g., GDPR, HIPAA, CCPA).
	•	Checked compliance dashboard:
	•	Reviewed Cyera’s compliance dashboard to verify reports on the compliance status of the AWS environment.
	•	Generated compliance reports to assess Cyera’s ability to meet organizational regulatory requirements.

8. Generated Reporting and Data Insights:

	•	Created detailed reports:
	•	Used Cyera’s reporting tools to generate detailed reports on sensitive data discovered, risks identified, and remediations performed.
	•	Customized these reports based on data sensitivity, access permissions, and security posture.
	•	Shared findings with stakeholders:
	•	Presented the findings to security, compliance, and data governance teams to review the effectiveness of Cyera’s scanning and remediation.

9. Reviewed Performance and Scalability:

	•	Assessed scan efficiency:
	•	Evaluated the speed and efficiency of Cyera’s scans on the AWS environment to ensure it covered large datasets, varying file types, and complex configurations.
	•	Tested multi-account setup:
	•	Tested how Cyera scaled across multiple AWS accounts and how well it aggregated and prioritized risks across all accounts.

10. Finalized PoC and Next Steps:

	•	Compiled PoC results:
	•	Summarized the key findings of the PoC, including the discovery of sensitive data, risk identification, and remediation actions.
	•	Evaluated against objectives:
	•	Reviewed how well Cyera met the initial objectives, such as improving visibility, detecting risks, or maintaining compliance.
	•	Provided feedback:
	•	Provided feedback to Cyera regarding any areas for improvement.
	•	Decided on full deployment:
	•	Based on the performance of the PoC, decided whether to proceed with full deployment of Cyera DSPM across AWS accounts.




PoC for Wiz.io DSPM on AWS Accounts

During the Proof of Concept (PoC), Wiz.io’s DSPM capabilities were validated across multiple AWS accounts. The focus was on assessing the platform’s ability to identify, classify, and secure sensitive data, including Personally Identifiable Information (PII) and other critical business data within AWS.

	1.	Account Integration and Configuration:
	•	AWS accounts were successfully onboarded into Wiz.io using IAM roles and security credentials. Permissions were set up to allow non-intrusive scans of various AWS services like S3, RDS, and DynamoDB.
	2.	Data Discovery and Classification:
	•	Wiz.io accurately identified structured and unstructured data across S3 buckets, RDS instances, and other AWS data stores. It also successfully classified sensitive data such as PII, financial records, and intellectual property based on predefined policies and custom rules.
	3.	Security Posture and Risk Evaluation:
	•	The platform provided a comprehensive risk analysis, flagging misconfigurations, overexposed S3 buckets, and unnecessary public access permissions. It identified potential security vulnerabilities and compliance risks associated with data handling in the cloud environment.
	4.	Remediation Recommendations:
	•	Wiz.io offered actionable insights and prioritized remediation steps to mitigate identified risks. It recommended adjusting IAM policies, enforcing encryption standards, and limiting data access based on the principle of least privilege.
	5.	Reporting and Dashboard Insights:
	•	The Wiz.io dashboard effectively displayed a real-time summary of security risks and data exposure levels. Detailed reports were generated, highlighting key findings and offering recommendations for improving data security posture.
	6.	Collaboration and Automation:
	•	The platform supported integrations with third-party security tools and automated workflows for addressing discovered issues. Incident management processes were streamlined through native integrations with existing alerting and monitoring systems.

The PoC demonstrated Wiz.io’s strong capabilities in enhancing data security posture within AWS environments, providing clear visibility into data risks and actionable remediation steps.


