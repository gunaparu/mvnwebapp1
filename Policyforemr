import boto3

def analyze_iam_policy(role_name):
    iam = boto3.client('iam')

    # Get the role's policy
    role_policy = iam.get_role_policy(
        RoleName=role_name,
        PolicyName='AmazonS3FullAccess'  # Change this to your policy name
    )

    # Extract the policy document
    policy_document = role_policy['PolicyDocument']

    # Extract some basic information
    version = policy_document.get('Version', 'N/A')
    statement_count = len(policy_document.get('Statement', []))

    print("IAM Policy Analysis:")
    print(f"Version: {version}")
    print(f"Number of Statements: {statement_count}")

    # Analyze each statement in the policy
    for idx, statement in enumerate(policy_document.get('Statement', []), start=1):
        print(f"\nStatement {idx}:")
        effect = statement.get('Effect', 'N/A')
        actions = statement.get('Action', 'N/A')
        resources = statement.get('Resource', 'N/A')
        conditions = statement.get('Condition', 'N/A')

        print(f"Effect: {effect}")
        print(f"Actions: {actions}")
        print(f"Resources: {resources}")
        print(f"Conditions: {conditions}")

# Example IAM role name
role_name = 'your-role-name'  # Replace 'your-role-name' with your actual IAM role name

# Analyze the IAM role policy
analyze_iam_policy(role_name)


import boto3
import json

def is_permission_in_policy(role_name, permission):
    # Create IAM client
    iam_client = boto3.client('iam')

    # Get the policy
    response = iam_client.get_role_policy(
        RoleName=role_name,
        PolicyName='your-policy-name'  # Replace 'your-policy-name' with the actual policy name
    )

    # Extract policy document
    policy_document = json.loads(response['PolicyDocument'])

    # Check if permission is in policy
    for statement in policy_document['Statement']:
        if 'Action' in statement and permission in statement['Action']:
            return True

    return False

# Example usage:
role_name = 'your-role-name'
permission = 's3:GetObject'  # Replace with the permission you want to check
is_permission_present = is_permission_in_policy(role_name, permission)
if is_permission_present:
    print(f"Permission '{permission}' is present in the policy for role '{role_name}'.")
else:
    print(f"Permission '{permission}' is not present in the policy for role '{role_name}'.")